/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.asset_tracker_schema.tables.records;


import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.generated.asset_tracker_schema.tables.AssetPrice;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetPriceRecord extends UpdatableRecordImpl<AssetPriceRecord> implements Record4<Long, Long, Long, BigInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>asset_tracker_schema.asset_price.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.asset_price.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>asset_tracker_schema.asset_price.asset_id</code>.
     */
    public void setAssetId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.asset_price.asset_id</code>.
     */
    public Long getAssetId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>asset_tracker_schema.asset_price.currency_id</code>.
     */
    public void setCurrencyId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.asset_price.currency_id</code>.
     */
    public Long getCurrencyId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>asset_tracker_schema.asset_price.price</code>.
     */
    public void setPrice(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.asset_price.price</code>.
     */
    public BigInteger getPrice() {
        return (BigInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, BigInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Long, BigInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AssetPrice.ASSET_PRICE.ID;
    }

    @Override
    public Field<Long> field2() {
        return AssetPrice.ASSET_PRICE.ASSET_ID;
    }

    @Override
    public Field<Long> field3() {
        return AssetPrice.ASSET_PRICE.CURRENCY_ID;
    }

    @Override
    public Field<BigInteger> field4() {
        return AssetPrice.ASSET_PRICE.PRICE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAssetId();
    }

    @Override
    public Long component3() {
        return getCurrencyId();
    }

    @Override
    public BigInteger component4() {
        return getPrice();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAssetId();
    }

    @Override
    public Long value3() {
        return getCurrencyId();
    }

    @Override
    public BigInteger value4() {
        return getPrice();
    }

    @Override
    public AssetPriceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AssetPriceRecord value2(Long value) {
        setAssetId(value);
        return this;
    }

    @Override
    public AssetPriceRecord value3(Long value) {
        setCurrencyId(value);
        return this;
    }

    @Override
    public AssetPriceRecord value4(BigInteger value) {
        setPrice(value);
        return this;
    }

    @Override
    public AssetPriceRecord values(Long value1, Long value2, Long value3, BigInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssetPriceRecord
     */
    public AssetPriceRecord() {
        super(AssetPrice.ASSET_PRICE);
    }

    /**
     * Create a detached, initialised AssetPriceRecord
     */
    public AssetPriceRecord(Long id, Long assetId, Long currencyId, BigInteger price) {
        super(AssetPrice.ASSET_PRICE);

        setId(id);
        setAssetId(assetId);
        setCurrencyId(currencyId);
        setPrice(price);
    }
}

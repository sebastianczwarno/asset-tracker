/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.asset_tracker_schema;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.asset_tracker_schema.tables.Asset;
import org.jooq.generated.asset_tracker_schema.tables.AssetPrice;
import org.jooq.generated.asset_tracker_schema.tables.AssetPriceUnderWallet;
import org.jooq.generated.asset_tracker_schema.tables.Currency;
import org.jooq.generated.asset_tracker_schema.tables.Wallet;
import org.jooq.generated.asset_tracker_schema.tables.records.AssetPriceRecord;
import org.jooq.generated.asset_tracker_schema.tables.records.AssetPriceUnderWalletRecord;
import org.jooq.generated.asset_tracker_schema.tables.records.AssetRecord;
import org.jooq.generated.asset_tracker_schema.tables.records.CurrencyRecord;
import org.jooq.generated.asset_tracker_schema.tables.records.WalletRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * asset_tracker_schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssetRecord> CONSTRAINT_5 = Internal.createUniqueKey(Asset.ASSET, DSL.name("CONSTRAINT_5"), new TableField[] { Asset.ASSET.ID }, true);
    public static final UniqueKey<AssetPriceRecord> CONSTRAINT_5F = Internal.createUniqueKey(AssetPrice.ASSET_PRICE, DSL.name("CONSTRAINT_5F"), new TableField[] { AssetPrice.ASSET_PRICE.ID }, true);
    public static final UniqueKey<AssetPriceUnderWalletRecord> CONSTRAINT_6 = Internal.createUniqueKey(AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET, DSL.name("CONSTRAINT_6"), new TableField[] { AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.ID }, true);
    public static final UniqueKey<CurrencyRecord> CONSTRAINT_2 = Internal.createUniqueKey(Currency.CURRENCY, DSL.name("CONSTRAINT_2"), new TableField[] { Currency.CURRENCY.ID }, true);
    public static final UniqueKey<WalletRecord> CONSTRAINT_D = Internal.createUniqueKey(Wallet.WALLET, DSL.name("CONSTRAINT_D"), new TableField[] { Wallet.WALLET.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AssetPriceRecord, AssetRecord> FK_PRICE_ASSET = Internal.createForeignKey(AssetPrice.ASSET_PRICE, DSL.name("fk_price_asset"), new TableField[] { AssetPrice.ASSET_PRICE.ASSET_ID }, Keys.CONSTRAINT_5, new TableField[] { Asset.ASSET.ID }, true);
    public static final ForeignKey<AssetPriceRecord, CurrencyRecord> FK_PRICE_CURRENCY = Internal.createForeignKey(AssetPrice.ASSET_PRICE, DSL.name("fk_price_currency"), new TableField[] { AssetPrice.ASSET_PRICE.CURRENCY_ID }, Keys.CONSTRAINT_2, new TableField[] { Currency.CURRENCY.ID }, true);
    public static final ForeignKey<AssetPriceUnderWalletRecord, WalletRecord> FK_ASSET_PRICE_UNDER_WALLET_WALLET = Internal.createForeignKey(AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET, DSL.name("fk_asset_price_under_wallet_wallet"), new TableField[] { AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.WALLET_ID }, Keys.CONSTRAINT_D, new TableField[] { Wallet.WALLET.ID }, true);
    public static final ForeignKey<WalletRecord, AssetRecord> FK_WALLET_ASSET = Internal.createForeignKey(Wallet.WALLET, DSL.name("fk_wallet_asset"), new TableField[] { Wallet.WALLET.ASSET_ID }, Keys.CONSTRAINT_5, new TableField[] { Asset.ASSET.ID }, true);
}

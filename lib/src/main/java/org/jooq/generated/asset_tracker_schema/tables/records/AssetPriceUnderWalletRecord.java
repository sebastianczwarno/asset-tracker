/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.asset_tracker_schema.tables.records;


import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.generated.asset_tracker_schema.tables.AssetPriceUnderWallet;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetPriceUnderWalletRecord extends UpdatableRecordImpl<AssetPriceUnderWalletRecord> implements Record5<Long, Long, String, String, BigInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>asset_tracker_schema.asset_price_under_wallet.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.asset_price_under_wallet.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>asset_tracker_schema.asset_price_under_wallet.wallet_id</code>.
     */
    public void setWalletId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>asset_tracker_schema.asset_price_under_wallet.wallet_id</code>.
     */
    public Long getWalletId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>asset_tracker_schema.asset_price_under_wallet.asset_name</code>.
     */
    public void setAssetName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>asset_tracker_schema.asset_price_under_wallet.asset_name</code>.
     */
    public String getAssetName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>asset_tracker_schema.asset_price_under_wallet.currency_code</code>.
     */
    public void setCurrencyCode(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>asset_tracker_schema.asset_price_under_wallet.currency_code</code>.
     */
    public String getCurrencyCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>asset_tracker_schema.asset_price_under_wallet.price</code>.
     */
    public void setPrice(BigInteger value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>asset_tracker_schema.asset_price_under_wallet.price</code>.
     */
    public BigInteger getPrice() {
        return (BigInteger) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, BigInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, String, BigInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.ID;
    }

    @Override
    public Field<Long> field2() {
        return AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.WALLET_ID;
    }

    @Override
    public Field<String> field3() {
        return AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.ASSET_NAME;
    }

    @Override
    public Field<String> field4() {
        return AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.CURRENCY_CODE;
    }

    @Override
    public Field<BigInteger> field5() {
        return AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET.PRICE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getWalletId();
    }

    @Override
    public String component3() {
        return getAssetName();
    }

    @Override
    public String component4() {
        return getCurrencyCode();
    }

    @Override
    public BigInteger component5() {
        return getPrice();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getWalletId();
    }

    @Override
    public String value3() {
        return getAssetName();
    }

    @Override
    public String value4() {
        return getCurrencyCode();
    }

    @Override
    public BigInteger value5() {
        return getPrice();
    }

    @Override
    public AssetPriceUnderWalletRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AssetPriceUnderWalletRecord value2(Long value) {
        setWalletId(value);
        return this;
    }

    @Override
    public AssetPriceUnderWalletRecord value3(String value) {
        setAssetName(value);
        return this;
    }

    @Override
    public AssetPriceUnderWalletRecord value4(String value) {
        setCurrencyCode(value);
        return this;
    }

    @Override
    public AssetPriceUnderWalletRecord value5(BigInteger value) {
        setPrice(value);
        return this;
    }

    @Override
    public AssetPriceUnderWalletRecord values(Long value1, Long value2, String value3, String value4, BigInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssetPriceUnderWalletRecord
     */
    public AssetPriceUnderWalletRecord() {
        super(AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET);
    }

    /**
     * Create a detached, initialised AssetPriceUnderWalletRecord
     */
    public AssetPriceUnderWalletRecord(Long id, Long walletId, String assetName, String currencyCode, BigInteger price) {
        super(AssetPriceUnderWallet.ASSET_PRICE_UNDER_WALLET);

        setId(id);
        setWalletId(walletId);
        setAssetName(assetName);
        setCurrencyCode(currencyCode);
        setPrice(price);
    }
}

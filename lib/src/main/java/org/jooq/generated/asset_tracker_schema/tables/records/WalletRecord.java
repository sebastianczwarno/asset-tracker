/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.asset_tracker_schema.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.asset_tracker_schema.tables.Wallet;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WalletRecord extends UpdatableRecordImpl<WalletRecord> implements Record3<Long, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>asset_tracker_schema.wallet.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.wallet.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>asset_tracker_schema.wallet.asset_id</code>.
     */
    public void setAssetId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.wallet.asset_id</code>.
     */
    public Long getAssetId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>asset_tracker_schema.wallet.asset_amount</code>.
     */
    public void setAssetAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>asset_tracker_schema.wallet.asset_amount</code>.
     */
    public Integer getAssetAmount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Wallet.WALLET.ID;
    }

    @Override
    public Field<Long> field2() {
        return Wallet.WALLET.ASSET_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Wallet.WALLET.ASSET_AMOUNT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAssetId();
    }

    @Override
    public Integer component3() {
        return getAssetAmount();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAssetId();
    }

    @Override
    public Integer value3() {
        return getAssetAmount();
    }

    @Override
    public WalletRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WalletRecord value2(Long value) {
        setAssetId(value);
        return this;
    }

    @Override
    public WalletRecord value3(Integer value) {
        setAssetAmount(value);
        return this;
    }

    @Override
    public WalletRecord values(Long value1, Long value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WalletRecord
     */
    public WalletRecord() {
        super(Wallet.WALLET);
    }

    /**
     * Create a detached, initialised WalletRecord
     */
    public WalletRecord(Long id, Long assetId, Integer assetAmount) {
        super(Wallet.WALLET);

        setId(id);
        setAssetId(assetId);
        setAssetAmount(assetAmount);
    }
}
